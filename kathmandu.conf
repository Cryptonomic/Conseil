include required(classpath("application.conf"))

platforms: [
  {
    name: "tezos"
    network: "kathmandunet"
    enabled: true
    baker-rolls-size: 8000

    node {
        #Replace the below entries with the address of your Tezos node
        protocol: "http"
        hostname: "65.108.44.106"
        port: "8733"
        path-prefix: ""
    }

   db {
   dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
   properties {
       # Replace the below lines with details of your database configured with the Conseil database schema
       # For infra 2.0 see host specific env file for correct values. this file is located in the same folder as this conf
       databaseName = "conseil"
       user = "captain"
       password = "IM2secC"
       url = "jdbc:postgresql://135.181.218.110:5432/conseil"
    }
  numThreads = 40
  maxConnections = 40
  }
 }
]

conseil {


 security: {
      api-keys: {
         keys: ["galleon", "arronax", "mininax", "hooman"]
   }
 }
}


lorre {
 batched-fetches.block-page-size: 500
 enabled-features.metadata-fetching-is-on: false
 enabled-features.fork-handling-is-on: false
 get-response-entity-timeout: 10 minutes
 request-await-time: 10 minutes
 sleep-interval: 90 s
 head-offset: 2

}

logging: {
    muted: false
    loggers: [
        {
            name: "com.base22",
            muted: true
        },
        {
            name: "slick",
            level: "INFO"
        },
        {
            name: "com.zaxxer.hikari",
            level: "INFO"
        },
        {
            name: "tech.cryptonomic.conseil.common",
            level: "INFO"
        },
        {
            name: "tech.cryptonomic.conseil.indexer",
            level: "INFO"
        },
        {
            name: "RightsFetcher",
            level: "INFO"
        },
        {
            name: "RightsUpdater",
            level: "INFO"
        },
        {
            # we don't provide a fallback level, hence this will log only if the env level is set
            name: "tech.cryptonomic.conseil.indexer.tezos.bigmaps.BigMapsOperations",
            from-env: "LORRE_BIG_MAPS_LOG_LEVEL"
        },
        {
            name: "tech.cryptonomic.conseil.indexer.tezos.michelson.contracts.TNSContracts",
            from-env: "LORRE_TNS_LOG_LEVEL",
            level: "INFO"
        },
        {
            #  get extra info from the akka-streamed async calls to the node, if trace-calls is enabled on the node conf.
            # change the level of the root logger handler accordingly to see the output (i.e. add outputLevel: "DEBUG")
            name: "tech.cryptonomic.conseil.indexer.tezos.node-rpc.batch",
            level: "INFO"
        }
    ]
}